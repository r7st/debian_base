---
- name: Check asserts
  ansible.builtin.assert:
    that:
      - ansible_distribution == "Debian"
      - (ansible_distribution_major_version == "11") or
        (ansible_distribution_major_version == "12")
      - base_timezone is defined
      - base_allow_reboot is boolean

- name: Update hosts file
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    line: "{{ item }}"
    insertbefore: EOF
  with_items:
    - "# Ansible managed hosts below (DO NOT EDIT)"
    - "{{ base_additional_hosts }}"
  when:
    - base_additional_hosts is defined
    - base_additional_hosts | length > 0
  tags: base_update_hosts

- name: Configure debian sources
  ansible.builtin.template:
    src: templates/sources.list.j2
    dest: /etc/apt/sources.list
    owner: root
    group: root
    mode: "0644"
  tags: base_sources

- name: Update packages
  ansible.builtin.apt:
    name: "*"
    update_cache: true
    state: latest
    clean: true
  tags: base_update_packages

- name: Check for reboot
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required

- name: Trigger reboot
  ansible.builtin.debug:
    msg: "Adding reboot to handlers"
  changed_when: reboot_required.stat.exists
  notify: Restart server

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Configure unattended upgrades
  ansible.builtin.import_tasks: unattended_upgrades.yml
  when: base_unattended_upgrades
  tags: base_unattended_upgrades

- name: Fstab configuration
  ansible.builtin.import_tasks: fstab.yml
  tags: base_fstab

- name: Set timezone
  community.general.timezone:
    name: "{{ base_timezone }}"
  tags: base_timezone

- name: Remove packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: absent
    purge: true
  with_items: "{{ base_remove_packages }}"
  tags: base_remove_packages

- name: Install packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items: "{{ base_install_packages }}"
  tags: base_install_packages

- name: Configure resolved
  ansible.builtin.import_tasks: resolved.yml
  tags: base_resolved

- name: Configure chrony
  ansible.builtin.import_tasks: chrony.yml
  tags: base_chrony

- name: Configure cron
  ansible.builtin.import_tasks: cron.yml
  tags: base_cron

- name: Configure auditd
  ansible.builtin.import_tasks: auditd.yml
  when: base_auditd
  tags: base_auditd

- name: Configure postfix
  ansible.builtin.import_tasks: postfix.yml
  tags: base_postfix

- name: Configure clamav
  ansible.builtin.import_tasks: clamav.yml
  tags: base_clamav

- name: Configure fail2ban
  ansible.builtin.import_tasks: fail2ban.yml
  tags: base_fail2ban

- name: Configure aide
  ansible.builtin.import_tasks: aide.yml
  tags: base_aide

- name: Enforce apparmpr
  ansible.builtin.command:
    cmd: aa-enforce /etc/apparmor.d/*
  changed_when: false
  tags: base_apparmor

- name: Disable coredumps
  ansible.builtin.copy:
    src: files/coredump.conf
    dest: /etc/systemd/coredump.conf
    owner: root
    group: root
    mode: "0644"
  notify: Restart server
  tags: base_disable_coredump

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
