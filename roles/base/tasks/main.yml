---
- name: Check asserts
  ansible.builtin.assert:
    that:
      - base_timezone is defined

- name: Update packages
  ansible.builtin.apt:
    name: "*"
    update_cache: true
    state: latest
  tags: base_update_packages

- name: Check for reboot
  ansible.builtin.stat:
    path: /var/run/reboot-required
  notify: Restart server

- name: Set timezone
  ansible.builtin.command:
    cmd: "timedatectl set-timezone {{ base_timezone }}"
  changed_when: false
  tags: base_timezone

- name: Remove packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: absent
    purge: true
  with_items: "{{ base_remove_packages }}"
  tags: base_remove_packages

- name: Install packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ base_install_packages }}"
  tags: base_install_packages

- name: Configure chrony
  ansible.builtin.import_tasks: chrony.yml
  tags: base_chrony

- name: Configure cron
  ansible.builtin.import_tasks: cron.yml
  tags: base_cron

- name: Install iptables rules
  ansible.builtin.copy:
    src: "files/iptables/{{ item }}"
    dest: /etc/iptables/{{ item }}
    owner: root
    group: root
    mode: 0640
  with_items:
    - rules.v4
    - rules.v6
  notify: Restart iptables
  tags: base_iptables

- name: Configure auditd
  ansible.builtin.import_tasks: auditd.yml
  tags: base_auditd

- name: Configure postfix
  ansible.builtin.import_tasks: postfix.yml
  tags: base_postfix

- name: Configure clamav
  ansible.builtin.import_tasks: clamav.yml
  tags: base_clamav

- name: Enforce apparmpr
  ansible.builtin.command:
    cmd: aa-enforce /etc/apparmor.d/*
  changed_when: false
  tags: base_apparmor

- name: Disable coredumps
  ansible.builtin.import_tasks: coredump.yml
  tags: base_disable_coredump

- name: Flush handlers
  meta: flush_handlers
